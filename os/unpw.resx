<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sbutton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALQAAAA9CAYAAAAEckMiAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPtSURBVHhe7Z0tU+tAFEDfT0MgEAgEAoFAIBAIBAKBQCAQ
        CAQCgUAgEAgEogLRf7Zvzs5sJk23bRoCyYYjzvQjaZoZDpe7996Ef/P5PIhMBYWWSaHQMikUWiaFQsuk
        UGiZFL0LPZvNwsPDQ7i5uYmcnJxEDg4Ows7OjvxR+PknF66vr6Mb9/f34fPzM+tRV3oRmpPi5M7OzsLe
        3l64uLiohH55eYl8fHxkPyt/A37+yYXb29voxuXlZdjf3w/Hx8fh7u6uF0e+JTQngMScFCf39PSU3U9k
        Ha+vr+Hq6qqK4kif268NnYQmIqcTUGLpE2RGagLl+/t7dp91bC00fxoODw/jY267SB8QKPGMwPn19ZXd
        J0droTkouTFfwMIvt49I3xA4idhtnWslNAfjoFQvcttFfhJy7KOjo/D29pbdXmej0ByEg3HQ3HaR34AC
        BEH1+fk5uz2xVmgWf5RULLnJGCBTwMd1kXql0OTM/EYYmWVMEFyRelVDZqXQ5+fn4fHxMbtNZEgIsgTb
        XPUjKzSdHNqTuW0iY4ACBVW35vtLQhPKaZhsU/sTGQKidLOruCQ0LWzmMprvi4yNVIGrv7cgdG4HkTFD
        i7w+frEgdHOjyNih6kGLPKXIldBsIHdOr0VK4fT0tGq4VELTM2dOI70WKYV6xaMSOrdiFCkBKnPM5PM8
        Cl1/Q6RE6B7ScIlCU6ajXNfcSaQU0iV/UWi6gnQHmzuJlELKo6PQPHHWWUomXboVhXZBKKXD9YfUo6PQ
        LAi7XJAoMhaYleYWGlHo3d1dh/ileLihjSmHTILU6Y5CO8wvpUMNmlp0FJqWt/fZkJJhqI7huii0V6hI
        6aTmYBQ6lTyaO4mUQhp9jkIDCbWVDikRZqEp2fFYCW37W0qFWWhmonleCZ1Wiem1SCnURzcqoYE82o6h
        lARpBulyuvHMgtCp9FF/T2TMNCt0C0JD27s8igxN7h4yS0KbS0sp5BqCS0KDrXAZO6z1yCbq0RmyQqfb
        lrpAlDGyzs+s0ECThd8APpzbLjIU9ftwNFkpNDBSyoebYV1kKDYN0q0VGihYI7WRWoYGmbmyO7ctsVFo
        ILyTszjrIUNAMCWothlxbiU0pFWlV7bIb4J3BNNN/ywo0Vpo4DeFy7Uo6xmt5SfBNVIMgug21bathE5Q
        o07/5dPcWvqEAgTtbDqApBjbFiQ6CQ18EV/IFzPtxByI1RDpCqksARKfmM3oGig7C53gi6mEMNTEkDWP
        vOYEzbclB+MVuMFfeoIh3pDKEiDT1FxXvi10HSI0kZqT5ASBeyWI1GGRl9ZiBL8+09ZehRYZGoWWSaHQ
        MikUWiaFQsuEmIf/etrxEYSBs7cAAAAASUVORK5CYII=
</value>
  </data>
</root>